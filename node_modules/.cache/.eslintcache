[{"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\index.js":"1","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\reportWebVitals.js":"2","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\App.js":"3","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\context\\AuthContext.js":"4","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\context\\MessageContext.js":"5","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\hooks\\AuthHook.js":"6","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\components\\PrivateRoute.jsx":"7","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\sign-in\\SignIn.jsx":"8","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\destination\\Explore.jsx":"9","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\sign-up\\SignUp.jsx":"10","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\hooks\\UseHttpHook.js":"11","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\hooks\\UseAuthStatus.js":"12","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\components\\Spinner.jsx":"13","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\signImage\\SignInImage.jsx":"14","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\chats\\Chats.jsx":"15","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\chat-title\\ChatTitle.jsx":"16","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\search\\ConversationSearch.jsx":"17","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\message\\ChatMessage.jsx":"18","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\chatInput\\ChatInput.jsx":"19"},{"size":535,"mtime":1660940277067,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1660940277354,"results":"22","hashOfConfig":"21"},{"size":1198,"mtime":1660987847456,"results":"23","hashOfConfig":"21"},{"size":206,"mtime":1655834411122,"results":"24","hashOfConfig":"21"},{"size":1922,"mtime":1660909395817,"results":"25","hashOfConfig":"21"},{"size":883,"mtime":1660816591435,"results":"26","hashOfConfig":"21"},{"size":388,"mtime":1655548136000,"results":"27","hashOfConfig":"21"},{"size":3099,"mtime":1660993336183,"results":"28","hashOfConfig":"21"},{"size":1721,"mtime":1660934667972,"results":"29","hashOfConfig":"21"},{"size":2933,"mtime":1660988532672,"results":"30","hashOfConfig":"21"},{"size":1063,"mtime":1660816712332,"results":"31","hashOfConfig":"21"},{"size":667,"mtime":1656368187206,"results":"32","hashOfConfig":"21"},{"size":208,"mtime":1655548136000,"results":"33","hashOfConfig":"21"},{"size":762,"mtime":1660915330443,"results":"34","hashOfConfig":"21"},{"size":2313,"mtime":1660991153214,"results":"35","hashOfConfig":"21"},{"size":877,"mtime":1660934825439,"results":"36","hashOfConfig":"21"},{"size":897,"mtime":1660847078577,"results":"37","hashOfConfig":"21"},{"size":2893,"mtime":1660934774134,"results":"38","hashOfConfig":"21"},{"size":893,"mtime":1660899042126,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"9125hi",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"43"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\index.js",[],[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\App.js",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\context\\AuthContext.js",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\context\\MessageContext.js",["102"],[],"import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHttp } from \"../hooks/UseHttpHook\";\r\nexport const localContext = createContext();\r\n\r\nfunction ContextLocalStorage(props) {\r\n    const [messageData, setMessageData] = useState();\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [ userData, setUserData] = useState(null);\r\n    const [lastUserMessages, setLastUserMessages] = useState([]);\r\n    const [originalData, setOriginalData] = useState([]);\r\n\r\n\r\n    const { request } = useHttp();\r\n \r\n\r\n  function getItem(id, image, name) {\r\n    setMessageData({id:id, image:image,name:name})\r\n    return { id, image, name };\r\n  }\r\n\r\n  const getMessageData = async () => {\r\n    if (messageData?.name) {\r\n   const getData = await request(\r\n     `/api/auth/message`,\r\n     \"GET\"\r\n   );\r\n   setMessages([...getData.message])\r\n }};\r\n\r\n    const getData = async () => {\r\n      const rawResponse = await request(`/api/auth/getUserChat`);\r\n      setUserData(rawResponse?.data);\r\n      getItem(rawResponse?.data[0]._id, rawResponse?.data[0].image, rawResponse?.data[0].name)\r\n    };\r\n\r\n    const getContact = () => {\r\n    const userMessages = messages.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    const lastMessages = [];\r\n    const names = [];\r\n    userMessages.map(item => {\r\n      if (!names.includes(item.name)) {\r\n        names.push(item.name);\r\n        lastMessages.push(item);\r\n      }\r\n    });\r\n    lastMessages.map(item => item.image = userData?.find(data => item.name === data.name).image);\r\n    setLastUserMessages([...lastMessages])\r\n    setOriginalData([...lastMessages])\r\n}\r\n  \r\n  return (\r\n    <localContext.Provider value={{ getItem, messageData, getMessageData,userData, messages, getData, getContact, originalData,lastUserMessages, setLastUserMessages}}>\r\n      {props.children}\r\n    </localContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ContextLocalStorage;\r\n","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\hooks\\AuthHook.js",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\components\\PrivateRoute.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\sign-in\\SignIn.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\destination\\Explore.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\sign-up\\SignUp.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\hooks\\UseHttpHook.js",["103"],[],"import { useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    \r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Щось пішло нетак\");\r\n        }\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        toast.error(e.message);\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => setError(null);\r\n  return { loading, request, error, clearError, data};\r\n};\r\n","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\hooks\\UseAuthStatus.js",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\signImage\\SignInImage.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\chats\\Chats.jsx",["104","105"],[],"import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect, useRef} from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { localContext } from \"../../context/MessageContext\";\r\n\r\nfunction Chats({setShowMessage}) {\r\n  const { getItem, messages, getData, getContact, lastUserMessages, messageData} =\r\n    useContext(localContext);\r\n    const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getContact();\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatBlock\">\r\n      <h1 className=\"title\">Chats</h1>\r\n      <ul className=\"listStyle\">\r\n        {lastUserMessages ? (\r\n          lastUserMessages.map((item) => {\r\n            const timeElapsed = item.date;\r\n            const today = new Date(timeElapsed);\r\n            const current =\r\n              today.toLocaleDateString(\"en-us\", { month: \"short\" }) +\r\n              \" \" +\r\n              today.getDate() +\r\n              \",\" +\r\n              today.getFullYear();\r\n            return (\r\n              <React.Fragment key={item._id}>\r\n                <li onClick={()=>setShowMessage(true)}>\r\n                  <div\r\n                    className={`conversation ${\r\n                      messageData.name === item.name && \"activeBlock\"\r\n                    }`}\r\n                    ref={scrollRef}\r\n                    onClick={() => getItem(item._id, item.image, item.name)}\r\n                  >\r\n                      <img\r\n                        src={`${item.image}`}\r\n                        alt=\"userpicture\"\r\n                        width=\"40px\"\r\n                        height=\"40px\"\r\n                      />\r\n                      <div className=\"colored-circle\">\r\n                        <div className=\"checkmark\"></div>\r\n                      </div>\r\n                    <div className=\"title-text\">{item.name}</div>\r\n                    <div className=\"created-date\">{current}</div>\r\n                    <div className=\"conversation-message\">{item.message}</div>\r\n                  </div>\r\n                </li>\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\chat-title\\ChatTitle.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\search\\ConversationSearch.jsx",[],[],"C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\message\\ChatMessage.jsx",["106","107"],[],"import { localContext } from \"../../context/MessageContext\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport ChatInput from \"../chatInput/ChatInput\";\r\nimport { useHttp } from \"../../hooks/UseHttpHook\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nfunction ChatMessage() {\r\n  const { messageData, getMessageData, messages } = useContext(localContext);\r\n  const { request } = useHttp();\r\n  const scrollRef = useRef();\r\n  const userMessages = messages.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  useEffect(() => {\r\n    getMessageData();\r\n  }, [messageData?.name]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  async function handleSendMsg(message, name) {\r\n    await request(\r\n      \"/api/auth/message\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        from: \"myself\",\r\n        name: messageData.name,\r\n        message: message,\r\n        date: new Date(),\r\n      })\r\n    ).then(() => getMessageData());\r\n\r\n    const dataResponse = await request(\r\n      \"https://api.chucknorris.io/jokes/random\",\r\n      \"GET\"\r\n    );\r\n\r\n    if (dataResponse?.value) {\r\n      setTimeout(async () => {\r\n        await request(\r\n          \"/api/auth/message\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            from: messageData.name,\r\n            name: messageData.name,\r\n            message: dataResponse?.value,\r\n            date: new Date(),\r\n          })\r\n        ).then(() => getMessageData());\r\n      }, 10000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-messages\">\r\n        {userMessages ? userMessages.map((message, i) => {\r\n          if (message.name === messageData?.name) {\r\n            const timeElapsed = message.date;\r\n            const today = new Date(timeElapsed);\r\n            const current =\r\n              today.toLocaleDateString('en-US',{hour:'numeric', minute:'numeric', hour12:true});\r\n            return (\r\n              <div ref={scrollRef} key={i}>\r\n                <div\r\n                  className={`message ${\r\n                    message.from === \"myself\" ? \"sended\" : \"recieved\"\r\n                  }`}\r\n                >\r\n                  {message.from === \"myself\" && (\r\n                    <img src={messageData.image} alt=\"person\" />\r\n                  )}\r\n                  <div className=\"content\">\r\n                    <p>{message.message}</p>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`message date ${\r\n                    message.from === \"myself\" ? \"sended\" : \"recieved\"\r\n                  }`}\r\n                >\r\n                  {current}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }) : (\r\n            <Spinner/>\r\n        )}\r\n      </div>\r\n      <ChatInput handleSendMsg={handleSendMsg} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\slipw\\OneDrive\\Документи\\Project-Yulia\\messanger-react\\client\\src\\pages\\chatInput\\ChatInput.jsx",[],[],{"ruleId":"108","severity":1,"message":"109","line":42,"column":27,"nodeType":"110","messageId":"111","endLine":42,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":7,"column":16,"nodeType":"114","messageId":"115","endLine":7,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":14,"column":6,"nodeType":"118","endLine":14,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":19,"column":6,"nodeType":"118","endLine":19,"endColumn":16,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"122","line":15,"column":6,"nodeType":"118","endLine":15,"endColumn":25,"suggestions":"123"},{"ruleId":"108","severity":1,"message":"124","line":57,"column":55,"nodeType":"110","messageId":"125","endLine":57,"endColumn":57},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'getContact'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'getMessageData'. Either include it or remove the dependency array.",["128"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [getData]",{"range":"135","text":"136"},"Update the dependencies array to be: [getContact, messages]",{"range":"137","text":"138"},"Update the dependencies array to be: [getMessageData, messageData.name]",{"range":"139","text":"140"},[449,451],"[getData]",[566,576],"[getContact, messages]",[577,596],"[getMessageData, messageData.name]"]