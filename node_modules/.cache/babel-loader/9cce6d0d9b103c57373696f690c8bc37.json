{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slipw\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\Project-Yulia\\\\messanger-react\\\\client\\\\src\\\\pages\\\\chats\\\\Chats.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport Spinner from \"../../components/Spinner\";\nimport { localContext } from \"../../context/MessageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chats(_ref) {\n  _s();\n\n  let {\n    setShowMessage\n  } = _ref;\n  const {\n    getItem,\n    messages,\n    getData,\n    getContact,\n    lastUserMessages,\n    messageData\n  } = useContext(localContext);\n  const scrollRef = useRef();\n  console.log(messageData.name);\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    getContact();\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listStyle\",\n      children: lastUserMessages ? lastUserMessages.map(item => {\n        const timeElapsed = item.date;\n        const today = new Date(timeElapsed);\n        const current = today.toLocaleDateString(\"en-us\", {\n          month: \"short\"\n        }) + \" \" + today.getDate() + \",\" + today.getFullYear();\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setShowMessage(true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation\",\n              ref: scrollRef,\n              onClick: () => getItem(item._id, item.image, item.name),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${item.image}`,\n                alt: \"userpicture\",\n                width: \"40px\",\n                height: \"40px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"colored-circle\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-text\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"created-date\",\n                children: current\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-message\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chats, \"oTqjWIeSgKUXAifggj/ICey2yLM=\");\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","Spinner","localContext","Chats","setShowMessage","getItem","messages","getData","getContact","lastUserMessages","messageData","scrollRef","console","log","name","current","scrollIntoView","behavior","map","item","timeElapsed","date","today","Date","toLocaleDateString","month","getDate","getFullYear","_id","image","message"],"sources":["C:/Users/slipw/OneDrive/Документи/Project-Yulia/messanger-react/client/src/pages/chats/Chats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect, useRef} from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { localContext } from \"../../context/MessageContext\";\r\n\r\nfunction Chats({setShowMessage}) {\r\n  const { getItem, messages, getData, getContact, lastUserMessages, messageData} =\r\n    useContext(localContext);\r\n    const scrollRef = useRef();\r\n    console.log(messageData.name)\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getContact();\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatBlock\">\r\n      <h1 className=\"title\">Chats</h1>\r\n      <ul className=\"listStyle\">\r\n        {lastUserMessages ? (\r\n          lastUserMessages.map((item) => {\r\n            const timeElapsed = item.date;\r\n            const today = new Date(timeElapsed);\r\n            const current =\r\n              today.toLocaleDateString(\"en-us\", { month: \"short\" }) +\r\n              \" \" +\r\n              today.getDate() +\r\n              \",\" +\r\n              today.getFullYear();\r\n            return (\r\n              <React.Fragment key={item._id}>\r\n                <li onClick={()=>setShowMessage(true)}>\r\n                  <div\r\n                    className=\"conversation\"\r\n                    ref={scrollRef}\r\n                    onClick={() => getItem(item._id, item.image, item.name)}\r\n                  >\r\n                      <img\r\n                        src={`${item.image}`}\r\n                        alt=\"userpicture\"\r\n                        width=\"40px\"\r\n                        height=\"40px\"\r\n                      />\r\n                      <div className=\"colored-circle\">\r\n                        <div className=\"checkmark\"></div>\r\n                      </div>\r\n                    <div className=\"title-text\">{item.name}</div>\r\n                    <div className=\"created-date\">{current}</div>\r\n                    <div className=\"conversation-message\">{item.message}</div>\r\n                  </div>\r\n                </li>\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}