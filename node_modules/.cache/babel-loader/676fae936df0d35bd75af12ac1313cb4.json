{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slipw\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\Project-Yulia\\\\messanger-react\\\\client\\\\src\\\\context\\\\MessageContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { useHttp } from \"../hooks/UseHttpHook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const localContext = /*#__PURE__*/createContext();\n\nfunction ContextLocalStorage(props) {\n  _s();\n\n  const [messageData, setMessageData] = useState();\n  const [messages, setMessages] = useState([]);\n  const [userData, setUserData] = useState(null);\n  const [lastUserMessages, setLastUserMessages] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const {\n    request\n  } = useHttp();\n\n  function getItem(id, image, name) {\n    setMessageData({\n      id: id,\n      image: image,\n      name: name\n    });\n    return {\n      id,\n      image,\n      name\n    };\n  }\n\n  const getMessageData = async () => {\n    if (messageData !== null && messageData !== void 0 && messageData.name) {\n      const getData = await request(`/api/auth/message`, \"GET\");\n      setMessages([...getData.message]);\n    }\n  };\n\n  const getData = async () => {\n    const rawResponse = await request(`/api/auth/getUserChat`);\n    setUserData(rawResponse === null || rawResponse === void 0 ? void 0 : rawResponse.data);\n    getItem(rawResponse === null || rawResponse === void 0 ? void 0 : rawResponse.data[0]._id, rawResponse === null || rawResponse === void 0 ? void 0 : rawResponse.data[0].image, rawResponse === null || rawResponse === void 0 ? void 0 : rawResponse.data[0].name);\n  };\n\n  const getContact = () => {\n    const userMessages = messages.sort((a, b) => new Date(b.date) - new Date(a.date));\n    const lastMessages = [];\n    const names = [];\n    userMessages.map(item => {\n      if (!names.includes(item.name)) {\n        names.push(item.name);\n        lastMessages.push(item);\n      }\n    });\n    lastMessages.map(item => item.image = userData === null || userData === void 0 ? void 0 : userData.find(data => item.name === data.name).image);\n    setLastUserMessages([...lastMessages]);\n    setOriginalData([...lastMessages]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(localContext.Provider, {\n    value: {\n      getItem,\n      messageData,\n      getMessageData,\n      userData,\n      messages,\n      getData,\n      getContact,\n      originalData,\n      lastUserMessages,\n      setLastUserMessages\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContextLocalStorage, \"V5X5nXSSazS/HtnkT966jCD4rzE=\", false, function () {\n  return [useHttp];\n});\n\n_c = ContextLocalStorage;\nexport default ContextLocalStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextLocalStorage\");","map":{"version":3,"names":["createContext","useState","useHttp","localContext","ContextLocalStorage","props","messageData","setMessageData","messages","setMessages","userData","setUserData","lastUserMessages","setLastUserMessages","originalData","setOriginalData","request","getItem","id","image","name","getMessageData","getData","message","rawResponse","data","_id","getContact","userMessages","sort","a","b","Date","date","lastMessages","names","map","item","includes","push","find","children"],"sources":["C:/Users/slipw/OneDrive/Документи/Project-Yulia/messanger-react/client/src/context/MessageContext.js"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHttp } from \"../hooks/UseHttpHook\";\r\nexport const localContext = createContext();\r\n\r\nfunction ContextLocalStorage(props) {\r\n    const [messageData, setMessageData] = useState();\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [ userData, setUserData] = useState(null);\r\n    const [lastUserMessages, setLastUserMessages] = useState([]);\r\n    const [originalData, setOriginalData] = useState([]);\r\n\r\n\r\n    const { request } = useHttp();\r\n \r\n\r\n  function getItem(id, image, name) {\r\n    setMessageData({id:id, image:image,name:name})\r\n    return { id, image, name };\r\n  }\r\n\r\n  const getMessageData = async () => {\r\n    if (messageData?.name) {\r\n   const getData = await request(\r\n     `/api/auth/message`,\r\n     \"GET\"\r\n   );\r\n   setMessages([...getData.message])\r\n }};\r\n\r\n    const getData = async () => {\r\n      const rawResponse = await request(`/api/auth/getUserChat`);\r\n      setUserData(rawResponse?.data);\r\n      getItem(rawResponse?.data[0]._id, rawResponse?.data[0].image, rawResponse?.data[0].name)\r\n    };\r\n\r\n    const getContact = () => {\r\n    const userMessages = messages.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    const lastMessages = [];\r\n    const names = [];\r\n    userMessages.map(item => {\r\n      if (!names.includes(item.name)) {\r\n        names.push(item.name);\r\n        lastMessages.push(item);\r\n      }\r\n    });\r\n    lastMessages.map(item => item.image = userData?.find(data => item.name === data.name).image);\r\n    setLastUserMessages([...lastMessages])\r\n    setOriginalData([...lastMessages])\r\n}\r\n  \r\n  return (\r\n    <localContext.Provider value={{ getItem, messageData, getMessageData,userData, messages, getData, getContact, originalData,lastUserMessages, setLastUserMessages}}>\r\n      {props.children}\r\n    </localContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ContextLocalStorage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}