{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slipw\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\Project-Yulia\\\\messanger-react\\\\client\\\\src\\\\pages\\\\message\\\\ChatMessage.jsx\",\n    _s = $RefreshSig$();\n\nimport { localContext } from \"../../context/MessageContext\";\nimport { useContext, useEffect, useRef } from \"react\";\nimport ChatInput from \"../chatInput/ChatInput\";\nimport { useHttp } from \"../../hooks/UseHttpHook\";\nimport Spinner from \"../../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ChatMessage() {\n  _s();\n\n  const {\n    messageData,\n    getMessageData,\n    messages\n  } = useContext(localContext);\n  const {\n    request\n  } = useHttp();\n  const scrollRef = useRef();\n  const userMessages = messages.sort((a, b) => new Date(a.date) - new Date(b.date));\n  useEffect(() => {\n    getMessageData();\n  }, [messageData === null || messageData === void 0 ? void 0 : messageData.name]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  async function handleSendMsg(message, name) {\n    await request(\"/api/auth/message\", \"POST\", JSON.stringify({\n      from: \"myself\",\n      name: messageData.name,\n      message: message,\n      date: new Date()\n    })).then(() => getMessageData());\n    const dataResponse = await request(\"https://api.chucknorris.io/jokes/random\", \"GET\");\n\n    if (dataResponse !== null && dataResponse !== void 0 && dataResponse.value) {\n      setTimeout(async () => {\n        await request(\"/api/auth/message\", \"POST\", JSON.stringify({\n          from: messageData.name,\n          name: messageData.name,\n          message: dataResponse === null || dataResponse === void 0 ? void 0 : dataResponse.value,\n          date: new Date()\n        })).then(() => getMessageData());\n      }, 10000);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: userMessages ? userMessages.map((message, i) => {\n        if (message.name === (messageData === null || messageData === void 0 ? void 0 : messageData.name)) {\n          const timeElapsed = message.date;\n          const today = new Date(timeElapsed);\n          const current = today.toLocaleDateString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.from === \"myself\" ? \"sended\" : \"recieved\"}`,\n              children: [message.from === \"myself\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: messageData.image,\n                alt: \"person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message date ${message.from === \"myself\" ? \"sended\" : \"recieved\"}`,\n              children: current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        }\n      }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      handleSendMsg: handleSendMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatMessage, \"cp+y+BMYGXcW01zlBE9hlZGpsS4=\", false, function () {\n  return [useHttp];\n});\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["localContext","useContext","useEffect","useRef","ChatInput","useHttp","Spinner","ChatMessage","messageData","getMessageData","messages","request","scrollRef","userMessages","sort","a","b","Date","date","name","current","scrollIntoView","behavior","handleSendMsg","message","JSON","stringify","from","then","dataResponse","value","setTimeout","map","i","timeElapsed","today","toLocaleDateString","hour","minute","hour12","image"],"sources":["C:/Users/slipw/OneDrive/Документи/Project-Yulia/messanger-react/client/src/pages/message/ChatMessage.jsx"],"sourcesContent":["import { localContext } from \"../../context/MessageContext\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport ChatInput from \"../chatInput/ChatInput\";\r\nimport { useHttp } from \"../../hooks/UseHttpHook\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nfunction ChatMessage() {\r\n  const { messageData, getMessageData, messages } = useContext(localContext);\r\n  const { request } = useHttp();\r\n  const scrollRef = useRef();\r\n  const userMessages = messages.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  useEffect(() => {\r\n    getMessageData();\r\n  }, [messageData?.name]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  async function handleSendMsg(message, name) {\r\n    await request(\r\n      \"/api/auth/message\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        from: \"myself\",\r\n        name: messageData.name,\r\n        message: message,\r\n        date: new Date(),\r\n      })\r\n    ).then(() => getMessageData());\r\n\r\n    const dataResponse = await request(\r\n      \"https://api.chucknorris.io/jokes/random\",\r\n      \"GET\"\r\n    );\r\n\r\n    if (dataResponse?.value) {\r\n      setTimeout(async () => {\r\n        await request(\r\n          \"/api/auth/message\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            from: messageData.name,\r\n            name: messageData.name,\r\n            message: dataResponse?.value,\r\n            date: new Date(),\r\n          })\r\n        ).then(() => getMessageData());\r\n      }, 10000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-messages\">\r\n        {userMessages ? userMessages.map((message, i) => {\r\n          if (message.name === messageData?.name) {\r\n            const timeElapsed = message.date;\r\n            const today = new Date(timeElapsed);\r\n            const current =\r\n              today.toLocaleDateString('en-US',{hour:'numeric', minute:'numeric', hour12:true});\r\n            return (\r\n              <div ref={scrollRef} key={i}>\r\n                <div\r\n                  className={`message ${\r\n                    message.from === \"myself\" ? \"sended\" : \"recieved\"\r\n                  }`}\r\n                >\r\n                  {message.from === \"myself\" && (\r\n                    <img src={messageData.image} alt=\"person\" />\r\n                  )}\r\n                  <div className=\"content\">\r\n                    <p>{message.message}</p>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`message date ${\r\n                    message.from === \"myself\" ? \"sended\" : \"recieved\"\r\n                  }`}\r\n                >\r\n                  {current}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }) : (\r\n            <Spinner/>\r\n        )}\r\n      </div>\r\n      <ChatInput handleSendMsg={handleSendMsg} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}